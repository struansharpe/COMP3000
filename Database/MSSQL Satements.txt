USE COMP3000_SSharpe
GO

CREATE TABLE [User]
(UID int IDENTITY(1,1) NOT NULL,
CONSTRAINT AK_UID UNIQUE(UID),
CONSTRAINT PK_UID PRIMARY KEY NONCLUSTERED (UID),
FriendlyName varchar (50) NOT NULL,
[Password] varchar (50) NOT NULL,
Email varchar(50) NOT NULL
);
GO




CREATE TABLE HouseHold
(HHID int IDENTITY(1,1) NOT NULL,
CONSTRAINT AK_HHID UNIQUE(HHID),
CONSTRAINT PK_HHID PRIMARY KEY NONCLUSTERED (HHID),
HHName varchar (50)NOT NULL,
AdminUser int NOT NULL,
CONSTRAINT FK_AdminUser FOREIGN KEY (AdminUser)
        REFERENCES [User] (UID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION,
RestrictedUsers int,
CONSTRAINT FK_RestrictedUsers FOREIGN KEY (RestrictedUsers)
        REFERENCES [User] (UID)
		ON DELETE NO ACTION
        ON UPDATE NO ACTION
 );
GO







CREATE TABLE Room
(RID int IDENTITY(1,1) NOT NULL,
CONSTRAINT AK_RID UNIQUE(RID),
CONSTRAINT PK_RID PRIMARY KEY NONCLUSTERED (RID),
RoomName varchar (50)NOT NULL,
HHID int CONSTRAINT FK_HHID FOREIGN KEY (HHID)
        REFERENCES HouseHold(HHID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION
);
GO




CREATE TABLE StorageSpace
(SSID int IDENTITY(1,1) NOT NULL,
CONSTRAINT AK_SSID UNIQUE(SSID),
CONSTRAINT PK_SSID PRIMARY KEY NONCLUSTERED (SSID),
StorageName varchar (50)NOT NULL,
RID int CONSTRAINT FK_RID FOREIGN KEY (RID)
        REFERENCES Room (RID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION
);
GO




CREATE TABLE ItemType
(ITID int IDENTITY(1,1) NOT NULL,
CONSTRAINT AK_IYID UNIQUE(ITID),
CONSTRAINT PK_ITID PRIMARY KEY NONCLUSTERED (ITID),
ITName varchar (50) NOT NULL
);
GO


CREATE TABLE Item
(IID int IDENTITY(1,1) NOT NULL,
CONSTRAINT AK_IID UNIQUE(IID),
CONSTRAINT PK_IID PRIMARY KEY NONCLUSTERED (IID),
ItemName varchar (50) NOT NULL,
ITID int CONSTRAINT FK_ITID FOREIGN KEY (ITID)
        REFERENCES ItemType (ITID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION
);
GO




CREATE TABLE HouseHoldItem
(HHIID int IDENTITY(1,1) NOT NULL,
CONSTRAINT AK_HHIID UNIQUE(HHIID),
CONSTRAINT PK_HHIID PRIMARY KEY NONCLUSTERED (HHIID),
QTY int NOT NULL,
SSID int CONSTRAINT FK_SSID FOREIGN KEY (SSID)
        REFERENCES StorageSpace (SSID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION,
		IID int CONSTRAINT FK_IID FOREIGN KEY (IID)
        REFERENCES Item (IID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION,
		HHID int CONSTRAINT FK_HHoldID FOREIGN KEY (HHID)
        REFERENCES HouseHold(HHID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION
);
GO



CREATE TABLE ShoppingList
(SLID int IDENTITY(1,1) NOT NULL,
CONSTRAINT PK_SLID PRIMARY KEY NONCLUSTERED (SLID),

		HHID int CONSTRAINT FK_HouseholdID FOREIGN KEY (HHID)
        REFERENCES HouseHold (HHID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION,

);
GO




CREATE TABLE ShoppingListItems
(SLIID int IDENTITY(1,1) NOT NULL,
CONSTRAINT PK_SLIID PRIMARY KEY NONCLUSTERED (SLIID),
SLID int CONSTRAINT FK_SLID FOREIGN KEY (SLID)
REFERENCES ShoppingList (SLID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION,
IID int NOT NULL
CONSTRAINT FK_ItemID FOREIGN KEY (IID)
        REFERENCES Item (IID)
		ON DELETE NO ACTION
        ON UPDATE NO ACTION,
		QTY int NOT NULL,
		Urgent bit NOT NULL
);
GO

CREATE TABLE Recipe
(RecipeID int IDENTITY(1,1) NOT NULL,
CONSTRAINT PK_RecipeID PRIMARY KEY NONCLUSTERED (RecipeID),
Details varchar (200) NOT NULL,
Instructions varchar (MAX) NOT NULL,
UserID int CONSTRAINT FK_User FOREIGN KEY (UserID)
        REFERENCES [User] (UID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION
		

);
GO


CREATE TABLE RecipeItem
(RecipeIID int IDENTITY(1,1) NOT NULL,
CONSTRAINT PK_RecipeIID PRIMARY KEY NONCLUSTERED (RecipeIID),
Item int CONSTRAINT FK_RecipeItemID FOREIGN KEY (Item)
REFERENCES Item (IID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION,
		RecipeID int CONSTRAINT FK_RecipeID FOREIGN KEY (RecipeID)
REFERENCES Recipe (RecipeID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION,
QTY int NOT NULL,
Weight int 
);
GO 





CREATE TABLE DesiredStock
(IID int 
CONSTRAINT FK_DSIID FOREIGN KEY (IID)
        REFERENCES Item (IID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION,
		HHID int 
CONSTRAINT FK_DSHHID FOREIGN KEY (HHID)
        REFERENCES HouseHold (HHID)
ON DELETE NO ACTION
        ON UPDATE NO ACTION,
		CONSTRAINT PK_HHIDIID PRIMARY KEY (IID,HHID),
		QTY int NOT NULL
)




CREATE TRIGGER CreateHouseHoldShoppingList ON HouseHold
AFTER INSERT
AS 
BEGIN
INSERT INTO ShoppingList(HHID)
SELECT i.HHID 
FROM 
inserted i;
END
GO





USE [COMP3000_SSharpe]
GO




CREATE TRIGGER addingToShoppingList ON HouseHoldItem
For UPDATE 
AS

DECLARE @HouseHoldID int
SELECT  @HouseHoldID = HHID
FROM inserted

DECLARE @ItemID int
SELECT @ItemID = IID
FROM inserted

DECLARE @ActualQTY int
SELECT @ActualQTY = QTY
FROM HouseHoldItem
WHERE HHID = @HouseHoldID
AND IID = @ItemID



DECLARE @ShoppingListID int
SELECT @ShoppingListID = SLID
FROM ShoppingList
WHERE HHID = @HouseHoldID


DECLARE @DesiredQTY int
SELECT @DesiredQTY = QTY
FROM dbo.DesiredStock
WHERE HHID = @HouseHoldID
AND IID = @ItemID



DECLARE @Urgency bit
if(@ActualQTY> 1 )
RETURN;
if(@ActualQTY=0)
SET @Urgency = 1;
ELSE 
SET @Urgency = 0;

BEGIN
IF EXISTS (SELECT * FROM ShoppingListItems WHERE @ShoppingListID = SLID AND @ItemID = IID)
UPDATE dbo.ShoppingListItems 
SET dbo.ShoppingListItems.Urgent = @Urgency
ELSE
INSERT INTO ShoppingListItems VALUES (@ShoppingListID,@ItemID, @DesiredQTY, @Urgency)
END;
GO




